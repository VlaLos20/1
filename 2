#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
#include <locale.h>

using namespace std;

struct Книга {
    string автор;
    string название;
    int год;
    string издательство;
    int страниц;
};

void loadDataFromFile(vector<Книга>& книги) {
    string имяФайла;
    cout << "Введите имя файла: ";
    cin >> имяФайла;

    ifstream файл(имяФайла);
    if (файл.is_open()) {
        Книга книга;
        while (файл >> книга.автор >> книга.название >> книга.год >> книга.издательство >> книга.страниц) {
            книги.push_back(книга);
        }
        файл.close();
        cout << "Данные загружены успешно!" << endl;
    } else {
        cout << "Не удалось открыть файл." << endl;
    }
}

void enterNewData(vector<Книга>& книги) {
    string имяФайла;
    cout << "Введите имя файла: ";
    cin >> имяФайла;

    ofstream файл(имяФайла, ios::app);
    if (файл.is_open()) {
        Книга книга;
        cout << "Введите данные книги (автор, название, год, издательство, количество страниц): ";
        cin >> книга.автор >> книга.название >> книга.год >> книга.издательство >> книга.страниц;
        файл << книга.автор << " " << книга.название << " " << книга.год << " " << книга.издательство << " " << книга.страниц << endl;
        книги.push_back(книга);
        файл.close();
        cout << "Данные добавлены успешно!" << endl;
    } else {
        cout << "Не удалось открыть файл." << endl;
    }
}

void appendDataToFile(vector<Книга>& книги) {
    string имяФайла;
    cout << "Введите имя файла: ";
    cin >> имяФайла;

    ofstream файл(имяФайла, ios::app);
    if (файл.is_open()) {
        Книга книга;
        cout << "Введите данные книги (автор, название, год, издательство, количество страниц): ";
        cin >> книга.автор >> книга.название >> книга.год >> книга.издательство >> книга.страниц;
        файл << книга.автор << " " << книга.название << " " << книга.год << " " << книга.издательство << " " << книга.страниц << endl;
        книги.push_back(книга);
        файл.close();
        cout << "Данные добавлены успешно!" << endl;
    } else {
        cout << "Не удалось открыть файл." << endl;
    }
}

void sortByTitle(vector<Книга>& книги) {
    sort(книги.begin(), книги.end(), [](const Книга& a, const Книга& b) {
        return a.название < b.название;
    });
    cout << "База данных отсортирована по названию!" << endl;
}

void findAuthorBooks(const vector<Книга>& книги) {
    string автор;
    cout << "Введите имя автора: ";
    cin >> автор;

    bool найдено = false;
    for (const auto& книга : книги) {
        if (книга.автор == автор) {
            cout << "Найдена книга: " << книга.название << " (" << книга.год << ")" << endl;
            найдено = true;
        }
    }

    if (!найдено) {
        cout << "Не найдено книг данного автора." << endl;
    }
}

void findLargestBook(const vector<Книга>& книги) {
    Книга наибольшаяКнига = книги[0];
    for (const auto& книга : книги) {
        if (книга.страниц > наибольшаяКнига.страниц) {
            наибольшаяКнига = книга;
        }
    }

    cout << "Книга с наибольшим количеством страниц: " << наибольшаяКнига.название << " (" << наибольшаяКнига.страниц << " страниц)" << endl;
}

void findAuthorBooksByYear(const vector<Книга>& книги) {
    string автор;
    int год;
    cout << "Введите имя автора: ";
    cin >> автор;
    cout << "Введите год: ";
    cin >> год;

    bool найдено = false;
    for (const auto& книга : книги) {
        if (книга.автор == автор && книга.год >= год) {

            cout << "Найдена книга: " << книга.название << " (" << книга.год << ")" << endl;
            найдено = true;
        }
    }

    if (!найдено) {
        cout << "Не найдено книг данного автора, изданных в указанном году." << endl;
    }
}

int main() {
    setlocale(LC_ALL, "Rus");
    vector<Книга> книги;
    int выбор;

    do {
        cout << "Выберите действие:\n";
        cout << "1. Загрузить данные из файла\n";
        cout << "2. Ввести новые данные\n";
        cout << "3. Добавить данные в конец файла\n";
        cout << "4. Сортировать базу данных по названию\n";
        cout << "5. Найти книги автора\n";
        cout << "6. Найти книгу с наибольшим количеством страниц\n";
        cout << "7. Найти книги автора по году\n";
        cout << "0. Выйти\n";
        cout << "Ваш выбор: ";
        cin >> выбор;

        switch (выбор) {
            case 1:
                loadDataFromFile(книги);
                break;
            case 2:
                enterNewData(книги);
                break;
            case 3:
                appendDataToFile(книги);
                break;
            case 4:
                sortByTitle(книги);
                break;
            case 5:
                findAuthorBooks(книги);
                break;
            case 6:
                findLargestBook(книги);
                break;
            case 7:
                findAuthorBooksByYear(книги);
                break;
            case 0:
                cout << "Выход из программы." << endl;
                break;
            default:
                cout << "Неверный выбор. Попробуйте еще раз." << endl;
                break;
        }
    } while (выбор != 0);

    return 0;
}
